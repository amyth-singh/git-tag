#!/bin/bash

# Get the current branch name
branch_name=$(git rev-parse --abbrev-ref HEAD)

# Function to increment version
increment_version() {
    local version=$1
    local major=$(echo $version | cut -d. -f1 | sed 's/v//')
    local minor=$(echo $version | cut -d. -f2)
    local patch=$(echo $version | cut -d. -f3)

    case $2 in
        major)
            major=$((major+1))
            minor=0
            patch=0
            ;;
        minor)
            minor=$((minor+1))
            patch=0
            ;;
        patch)
            patch=$((patch+1))
            ;;
    esac

    echo "v$major.$minor.$patch"
}

# Check if branch name contains "major", "minor", or "patch"
if [[ $branch_name =~ major|minor|patch ]]; then
    # Determine which part to increment
    if [[ $branch_name =~ major ]]; then
        increment_type="major"
    elif [[ $branch_name =~ minor ]]; then
        increment_type="minor"
    else
        increment_type="patch"
    fi

    # Fetch all tags
    git fetch --tags

    # Get the latest tag
    latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))

    # If no tags exist, start with v0.0.0
    if [ -z "$latest_tag" ]; then
        latest_tag="v0.0.0"
    fi

    # Increment the version
    new_tag=$(increment_version $latest_tag $increment_type)

    echo "New tag will be: $new_tag"

    # Create and push the new tag
    git tag $new_tag
    git push origin $new_tag

    echo "New tag $new_tag has been created and pushed."
else
    echo "Branch name does not contain 'major', 'minor', or 'patch'. No action taken."
fi
